{"ast":null,"code":"var _jsxFileName = \"/Users/kylecapka/Documents/Web_Dev_Projects/soulsapp/src/game.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport NavBar from \"./navbar\";\nimport enemy1 from \"./imgs/skeleton-enemy.webp\";\nimport \"./game.css\";\nimport Popup from \"./defeated\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  _s();\n  const [coinCount, setCoinCount] = useState(0);\n  const [enemyHealth, setEnemyHealth] = useState(500);\n  const [trigger, setTrigger] = useState(false);\n  let skeletor = {\n    src: enemy1,\n    health: enemyHealth\n  };\n  function handleDamage() {\n    setEnemyHealth(prevEnemyHealth => prevEnemyHealth - 50);\n  }\n  if (enemyHealth === 0) {\n    setCoinCount(prevCoinCount => prevCoinCount + 112);\n    setEnemyHealth(500);\n    setTrigger(true);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      coin: coinCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"enemies\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: skeletor.src,\n        onClick: handleDamage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Health: \", skeletor.health, \"/500\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      trigger: trigger\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleResetEnemy,\n      children: \"Reset Enemy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Game, \"QbbtRslu0bJZQWsq+jG9sgsyDAY=\");\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","NavBar","enemy1","Popup","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","coinCount","setCoinCount","enemyHealth","setEnemyHealth","trigger","setTrigger","skeletor","src","health","handleDamage","prevEnemyHealth","prevCoinCount","children","coin","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","handleResetEnemy","_c","$RefreshReg$"],"sources":["/Users/kylecapka/Documents/Web_Dev_Projects/soulsapp/src/game.js"],"sourcesContent":["import React, {useState} from 'react';\nimport NavBar from \"./navbar\";\nimport enemy1 from \"./imgs/skeleton-enemy.webp\";\nimport \"./game.css\";\nimport Popup from \"./defeated\";\n\n\nexport default function Game() {\n    const [coinCount, setCoinCount] = useState(0);\n    const [enemyHealth, setEnemyHealth] = useState(500);\n    const [trigger, setTrigger] = useState(false);\n\n    let skeletor = {src: enemy1, health: enemyHealth};\n    \n    function handleDamage() {\n        setEnemyHealth(prevEnemyHealth => prevEnemyHealth - 50);\n    }\n\n    if (enemyHealth === 0) {\n        setCoinCount(prevCoinCount => prevCoinCount + 112);\n        setEnemyHealth(500);\n        setTrigger(true);\n    }\n    \n\n    return (\n        <>\n            <NavBar coin={coinCount} />\n            <div className=\"enemies\">\n                <img src={skeletor.src} onClick={handleDamage} />\n                <p>Health: {skeletor.health}/500</p>\n            </div>\n            <Popup trigger={trigger} />\n            <button onClick={handleResetEnemy}>Reset Enemy</button>\n        \n        </>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAO,YAAY;AACnB,OAAOC,KAAK,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG/B,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,GAAG,CAAC;EACnD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAE7C,IAAIgB,QAAQ,GAAG;IAACC,GAAG,EAAEf,MAAM;IAAEgB,MAAM,EAAEN;EAAW,CAAC;EAEjD,SAASO,YAAYA,CAAA,EAAG;IACpBN,cAAc,CAACO,eAAe,IAAIA,eAAe,GAAG,EAAE,CAAC;EAC3D;EAEA,IAAIR,WAAW,KAAK,CAAC,EAAE;IACnBD,YAAY,CAACU,aAAa,IAAIA,aAAa,GAAG,GAAG,CAAC;IAClDR,cAAc,CAAC,GAAG,CAAC;IACnBE,UAAU,CAAC,IAAI,CAAC;EACpB;EAGA,oBACIV,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACIjB,OAAA,CAACJ,MAAM;MAACsB,IAAI,EAAEb;IAAU;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3BtB,OAAA;MAAKuB,SAAS,EAAC,SAAS;MAAAN,QAAA,gBACpBjB,OAAA;QAAKY,GAAG,EAAED,QAAQ,CAACC,GAAI;QAACY,OAAO,EAAEV;MAAa;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjDtB,OAAA;QAAAiB,QAAA,GAAG,UAAQ,EAACN,QAAQ,CAACE,MAAM,EAAC,MAAI;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACNtB,OAAA,CAACF,KAAK;MAACW,OAAO,EAAEA;IAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3BtB,OAAA;MAAQwB,OAAO,EAAEC,gBAAiB;MAAAR,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAEzD,CAAC;AAEX;AAAClB,EAAA,CA9BuBD,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}